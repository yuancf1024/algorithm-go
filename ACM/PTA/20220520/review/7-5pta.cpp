/* 7-5 我侬数
元初的中国书画大家赵孟頫的妻子管道升曾经写过一首脍炙人口的《我侬词》，
词中道：“把一块泥，捻一个你，塑一个我。将咱们两个一齐打破，用水调和。再捏一个你，再塑一个我。我泥中有你，你泥中有我。”
给定一对正整数 A 和 B，将它们的各位数字收集到一起，再重新分成两个数 A 和 B ′，我们称这样的 A′和 B′
互为基于 A 和 B 的“我侬数“。本题就请你判断任一对数字是否是基于给定 A 和 B 的“我侬数“。

输入格式：

输入首先在第一行中给出两个不超过 10^4位的正整数 A 和 B，
为“我侬数“的基础数。随后每行给出一对不超过 2×10^4位的正整数 A′和B′。
数字间以 1 个空格分隔。

输入以一对 0 结束，这一对 0 不要处理。
题目保证至少有一对需要判定的数字。

输出格式：
对每一对 A′和 B′，判断其是否是基于给定 A 和 B 的“我侬数“。
如果是，则在一行中输出 Yes，否则输出 No。

注意：所有数字均不考虑前导 0。例如 A=101，B=2021，
则我们不能判定 012 和 0121 为“我侬数“。

输入样例：
521212577999 21100008482136
521212577999 21100008482136
00210908482136 512121257799
123456789012597890 11100222
786238645254 19024781758903
21100008482136 521212577999
90 52121257792110008482136
0 0
输出样例：
Yes
No
Yes
No
Yes
No

*/

/*
题目分析/解题思路
将原先的两个大整数组合再拆分为两个大整数，我们可以将A和B拼接后排序，
也可以将二者的各位数字使用哈希表统计，之后我们再将每次读入的A'和B'也做
同样的处理即可，最后比较处理结果即可。

注意：在处理之前需要先对大整数做去前导零的处理。
*/

#include <bits/stdc++.h>
using namespace std;

string f(string a, string b) { 
    reverse(begin(a), end(a));
    reverse(begin(b), end(b));
    while (a.back() == '0') a.pop_back();
    while (b.back() == '0') b.pop_back();
    a = a + b;
    sort(begin(a), end(a));
    return a;
}

int main()
{
    /* code */
    cin.tie(nullptr)->sync_with_stdio(false);
    string a, b;
    cin >> a >> b;
    a = f(a, b);
    string x, y;
    while (cin >> x >> y and x != "0" and y != "0") {
        cout << (f(x, y) == a ? "Yes" : "No") << '\n';
    }
    return 0;
}
