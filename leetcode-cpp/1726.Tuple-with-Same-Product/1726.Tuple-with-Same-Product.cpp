/**
 * @file 1726.Tuple-with-Same-Product.cpp
 * @author your name (you@domain.com)
 * @brief leetcode-1726.同积元组
 * @version 0.1
 * @date 2023-10-19
 * 
 * @copyright Copyright (c) 2023
 * 给你一个由 不同 正整数组成的数组 nums ，
 * 请你返回满足 a * b = c * d 的元组 (a, b, c, d) 的数量。
 * 其中 a、b、c 和 d 都是 nums 中的元素，且 a != b != c != d 。

示例 1：
输入：nums = [2,3,4,6]
输出：8
解释：存在 8 个满足题意的元组：
(2,6,3,4) , (2,6,4,3) , (6,2,3,4) , (6,2,4,3)
(3,4,2,6) , (4,3,2,6) , (3,4,6,2) , (4,3,6,2)

示例 2：
输入：nums = [1,2,4,5,10]
输出：16
解释：存在 16 个满足题意的元组：
(1,10,2,5) , (1,10,5,2) , (10,1,2,5) , (10,1,5,2)
(2,5,1,10) , (2,5,10,1) , (5,2,1,10) , (5,2,10,1)
(2,10,4,5) , (2,10,5,4) , (10,2,4,5) , (10,2,5,4)
(4,5,2,10) , (4,5,10,2) , (5,4,2,10) , (5,4,10,2)
 
提示：

1 <= nums.length <= 1000
1 <= nums[i] <= 10^4
nums 中的所有元素 互不相同
 */

#include <bits/stdc++.h>

using namespace std;

class Solution {
public:
    int tupleSameProduct(vector<int>& nums) {
        int n = nums.size();
        int ans = 0;
        unordered_map<int, int> cnt;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                cnt[nums[i] * nums[j]]++;
            }
        }
        for (auto &[k, v] : cnt) {
            ans += v * (v - 1) * 4;
        }
        return ans;
    }
};

int main() {
    vector<int> nums = {1,2,4,5,10};
    int res = Solution().tupleSameProduct(nums);
    cout << res << endl;

    return 0;
}

/**
 * @brief leetcode官方题解
 * 方法一：哈希统计
思路与算法

假设当前给定元组 (a,b,c,d) 满足 a×b=c×d，
且此时满足 a≠b≠c≠d ，则可以知道该元组可以按照不同顺序组合，
组成 8 个不同的元组，且这个 8 个元组均满足题目要求：

(a,b,c,d),(a,b,d,c);
(a,b,c,d),(b,a,c,d);
(c,d,a,b),(c,d,b,a);
(d,c,a,b),(d,c,b,a);
由于数组 nums 由不同正整数组成，
这就意味着数组中不存在相同元素。
题目要求找两个元素乘积相同的 4元组，
我们可以统计数组中所有不同元素的乘积组合数目。
假设数组中存在数对 (a,b)，满足 a<b，此时它的乘积为 a×b，
数组中乘积为 a×b的数对数目为 cnt(a×b) ，
此时只需在乘积为 a×b的数对中任意选择一个不同的数对 (c,d)，
满足 c×d=a×b，由于数组中不存在相同元素所以一定满足 a≠b，c≠d，
已知 a≠b≠c，则一定满足 a≠b≠c≠d，
此时 (a,b,c,d) 一定可以构成同积元组。
根据上述分析，我们只需要在满足乘积相同的 数对 中，
任意选择 2 个两不同的数对一定可以构成 8 个不同的同积元组。
根据排列组合可以知道，如果存在cnt(a×b) 个乘积相同的数对，
则此时可以有 C_cnt(a×b)^2C 
种不同的数对组合，即此时可以构成的同积元组的数目为: 
cnt(a×b)×(cnt(a×b)−1)/2×8=cnt(a×b)×(cnt(a×b)−1)×4

根据上述推论，我们统计数组中所有不同元素的乘积组合数目，
然后计算相同乘积的数对可以构成同积元组的数目，并求和即可得到最终结果。

复杂度分析

时间复杂度：O(n^2)，其中 n 表示数组的长度。
求数组中任意两个元素之积以及遍历所有同的两数之积，
需要的时间均为 O(n^2)，因此总的时间复杂度为 O(n^2)。

空间复杂度：O(n^2)，其中 n 表示数组的长度。
统计数组中任意两个元素之积，最多有 n^2种不同的计算结果，
因此需要的空间为 O(n^2)。

 */