/* 62. 不同路径
一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。

机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。

问总共有多少条不同的路径？

示例 1：
输入：m = 3, n = 7
输出：28

示例 2：
输入：m = 3, n = 2
输出：3
解释：
从左上角开始，总共有 3 条路径可以到达右下角。
1. 向右 -> 向下 -> 向下
2. 向下 -> 向下 -> 向右
3. 向下 -> 向右 -> 向下

示例 3：
输入：m = 7, n = 3
输出：28

示例 4：
输入：m = 3, n = 3
输出：6
*/

// 复写 2022-07-30
class Solution {
public:
    int uniquePaths(int m, int n) { 
        vector<vector<int>> dp(m, vector<int>(n, 0));
        for (int i = 0; i < m; ++i) {
            dp[i][0] = 1;
        }

        for (int j = 0; j < n; ++j) {
            dp[0][j] = 1;
        }

        for (int i = 1; i < m; ++i) {
            for (int j = 1; j < n; ++j) {
                dp[i][j] = dp[i][j - 1] + dp[i - 1][j];
            }
        }
        return dp[m - 1][n - 1];
    }
};

/* 解题思路
DP

1. 确定dp[i][j] table及下标的含义

dp[i][j] 代表从坐标[0][0] 到 [i][j]的路径数目，i、j分别为目标位置的x、y坐标

2. 确定递推公式

dp[i][j] = dp[i][j-1] + dp[i-1][j]

采用滚动数组的方法 ?

dp[j] = dp[j-1] + dp[j]

3. dp table 的初始化

dp[0][0] = 1
dp[i][0] = 1
dp[0][j] = 1

4. 确定遍历顺序

从左到右，从上到下

5. 举例推到dp数组


*/