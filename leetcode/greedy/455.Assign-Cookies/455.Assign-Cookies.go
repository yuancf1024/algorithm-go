package leetcode

import "sort"

/* 455. 分发饼干
假设你是一位很棒的家长，想要给你的孩子们一些小饼干。
但是，每个孩子最多只能给一块饼干。

对每个孩子 i，都有一个胃口值 g[i]，这是能让孩子们满足胃口的饼干的最小尺寸；
并且每块饼干 j，都有一个尺寸 s[j] 。
如果 s[j] >= g[i]，我们可以将这个饼干 j 分配给孩子 i ，
这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，
并输出这个最大数值。
*/

// 参考halfrost 贪心 从先满足小胃口小朋友开始
func findContentChildren(g []int, s []int) int {
	sort.Ints(g)
	sort.Ints(s)
	gi, si, res := 0, 0, 0
	for gi < len(g) && si < len(s) {
		if s[si] >= g[gi] {
			res++
			si++
			gi++
		} else {
			si++
		}
	}
	return res
}

/*
解题思路
假设你想给小朋友们饼干，每个小朋友最多能够给一块饼干。
每个小朋友都有一个“贪心指数”，称为 g[i]，
g[i] 表示的是这名小朋友需要的饼干大小的最小值。
同时，每个饼干都有一个大小值 s[i]，如果 s[j] ≥ g[i]，
我们将饼干 j 分给小朋友 i 后，小朋友会很开心。给定数组 g[] 和 s[]，
问如何分配饼干，能让更多的小朋友开心。
这是一道典型的简单贪心题。贪心题一般都伴随着排序。
将 g[] 和 s[] 分别排序。按照最难满足的小朋友开始给饼干，
依次往下满足，最终能满足的小朋友数就是最终解。
*/