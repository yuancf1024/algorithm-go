/* 7-6 非诚勿扰
“非诚勿扰”是江苏台一款非常受欢迎的相亲节目，台上的女嘉宾们可以从出场的男嘉宾
中选择自己喜欢的牵手离开。问题是怎样才能选到最适合自己的男嘉宾呢？
这是个概率问题。
解决这个问题有一种随机算法：假设女嘉宾知道自己最多能在台上录几期节目，
也就知道自己最多能见到 N 位男嘉宾，那么她可以选择一个随机数 R（<N），
对她见到的前 R 位男嘉宾，一个都不牵，只是以他们中最合适的那位作为一个标准，
从第 R+1 位男嘉宾开始，只要遇到一个比标准更合适的，就决定牵手。
理论上可以证明，当 R=N/e （其中 e 是自然常数，约等于 2.718）时，
这样做能牵手最合适的男嘉宾的概率最高。

本题就请你根据男嘉宾的出场顺序，预测一下女嘉宾会牵手哪一位。

输入格式：
输入首先在第一行中给出正整数 N（3≤N≤10^4），即男嘉宾的数量。
第二行给出 N 个互不相同的正整数，第 i 个数字表示第 i 位男嘉宾
在女嘉宾心目中的得分。数字均不超过 10^5，之间以空格分隔。

输出格式：
女嘉宾将以 R=⌊N/e⌋ 为线，采用题面中描述的算法选择牵手的男嘉宾。
这里我们取 e=2.718。请在一行中输出她牵手的男嘉宾的序号和真正最适合她的
男嘉宾的序号（从 1 开始），数字间以 1 个空格分隔。

如果她一直没有遇到比标准更合适的人，就会独自离开，此时对应的序号输出为 0。

输入样例 1：
10
23 84 15 29 17 56 85 40 91 28

输出样例 1：
7 9

输入样例 2：
10
56 85 17 23 84 15 29 40 31 28

输出样例 2：
0 2

代码长度限制
16 KB
时间限制
400 ms
内存限制
64 MB
*/

/*
按照题目要求的方式记录根据规则选中的目标和实际的最佳目标。
规则选中目标的方法：先从前r个人中选择最高分作为参考，
然后从之后的嘉宾中选取第一个大于参考的作为牵手嘉宾（如果没有，牵手失败）。
同时，遍历过程中要记录评分最高的嘉宾序号。*/

#include <bits/stdc++.h>
using namespace std;

int main() {
    int n;
    cin >> n;
    int r = int(1.0 * n / 2.718);
    int pivot = -1; // 参考标准
    int maxScore = -1; // 最高评分
    int select = 0, best; // 选择的编号和最好的编号
    for (int i = 1; i <= n; i++) {
        int tmp;
        cin >> tmp;
        if (i <= r)
            pivot = max(pivot, tmp); // 在前r个中找到参考
        else {
            if (select == 0 && tmp > pivot) { //如果没有选择，则选择比参考好的第一个
                select = i;
            }
        }
        if (tmp > maxScore) { // 计算最高分数
            maxScore = tmp;
            best = i;
        }
    }
    cout << select << " " << best; // 输出结果
    return 0;
}